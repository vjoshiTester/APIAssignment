{
	"info": {
		"_postman_id": "ef965281-8408-4cec-a478-b9bab6ace8ad",
		"name": "Restful-Broker",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create-Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify Create Booking - Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"pm.test(\"Verify Create Booking - First Name in the response\", function () {",
							"    pm.expect(jsonData.booking.firstname).to.eql(\"FName\".concat(pm.globals.get(\"randomString\")));",
							"});",
							"",
							"pm.test(\"Verify Create Booking - Last Name in the response\", function () {",
							"    pm.expect(jsonData.booking.lastname).to.eql(\"LName\".concat(pm.globals.get(\"randomString\")));",
							"});",
							"",
							"pm.test(\"Verify Create Booking - Additional needs as Breakfast\", function () {",
							"    pm.expect(jsonData.booking.additionalneeds).to.eql('Breakfast');",
							"});",
							"// Retrieve booking id and store it in environment variable",
							"pm.environment.set('bookingId', jsonData.bookingid);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"function randomString(minValue, maxValue, dataSet = 'abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ') {",
							"    if (!minValue) {",
							"        minValue = 20;",
							"        maxValue = 20;",
							"    }",
							"    if (!maxValue) {",
							"        maxValue = minValue;",
							"    }",
							"    let length = _.random(minValue, maxValue),",
							"        randomString = \"\";",
							"",
							"    for (let i = 0; i < length; i++)",
							"        randomString += dataSet.charAt(Math.floor(Math.random() * dataSet.length));",
							"    return randomString;",
							"}",
							"pm.globals.set('randomString', randomString());"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstname\" : \"FName{{randomString}}\",\n    \"lastname\" : \"LName{{randomString}}\",\n    \"totalprice\" : 111,\n    \"depositpaid\" : true,\n    \"bookingdates\" : {\n        \"checkin\" : \"2018-01-01\",\n        \"checkout\" : \"2019-01-01\"\n    },\n    \"additionalneeds\" : \"Breakfast\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/booking",
					"host": [
						"{{host}}"
					],
					"path": [
						"booking"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get-Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Verify Get Booking - First Name in the response\", function () {",
							"    pm.expect(jsonData.firstname).to.eql(\"FName\".concat(pm.globals.get(\"randomString\")));",
							"});",
							"",
							"pm.test(\"Verify Get Booking - Last Name in the response\", function () {",
							"    pm.expect(jsonData.lastname).to.eql(\"LName\".concat(pm.globals.get(\"randomString\")));",
							"});",
							"",
							"pm.test(\"Verify Get Booking - Status code name is OK\", function () {",
							"    pm.response.to.have.status(\"OK\");",
							"});",
							"",
							"pm.test(\"Verify Get Booking - Deposit paid is true\", function () {",
							"    pm.expect(jsonData.depositpaid).to.eql(true);",
							"});",
							"",
							"pm.test(\"Verify Get Booking - Additional needs as Breakfast\", function () {",
							"    pm.expect(jsonData.additionalneeds).to.eql('Breakfast');",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "default"
					},
					{
						"key": "Authorization",
						"value": "Basic YWRtaW46cGFzc3dvcmQxMjM=",
						"type": "default",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/booking/{{bookingId}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"booking",
						"{{bookingId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update-Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify Update Booking - Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"pm.test(\"Verify Update Booking - Updated First Name in the response\", function () {",
							"    pm.expect(jsonData.firstname).to.eql(\"UpdatedFirstName\");",
							"});",
							"",
							"pm.test(\"Verify Update Booking - Updated Last Name in the response\", function () {",
							"    pm.expect(jsonData.lastname).to.eql(\"UpdatedLastName\");",
							"});",
							"",
							"pm.test(\"Verify Update Booking - Updated Additional needs as B&B - Bed & Breakfast\", function () {",
							"    pm.expect(jsonData.additionalneeds).to.eql('B&B - Bed & Breakfast');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"content-type": true
				}
			},
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "default"
					},
					{
						"key": "Authorization",
						"value": "Basic YWRtaW46cGFzc3dvcmQxMjM=",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstname\" : \"UpdatedFirstName\",\n    \"lastname\" : \"UpdatedLastName\",\n    \"totalprice\" : 111,\n    \"depositpaid\" : true,\n    \"bookingdates\" : {\n        \"checkin\" : \"2018-01-01\",\n        \"checkout\" : \"2019-01-01\"\n    },\n    \"additionalneeds\" : \"B&B - Bed & Breakfast\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/booking/{{bookingId}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"booking",
						"{{bookingId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete-Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify Delete Booking - Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Verify Delete Booking - Response body contains Created\", function () {",
							"    pm.response.to.have.body(\"Created\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "default"
					},
					{
						"key": "Authorization",
						"value": "Basic YWRtaW46cGFzc3dvcmQxMjM=",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/booking/{{bookingId}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"booking",
						"{{bookingId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get-Booking after deletion",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify Delete Booking - Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Verify Delete Booking - Response body contains Not Found\", function () {",
							"    pm.response.to.have.body(\"Not Found\");",
							"});",
							"",
							"pm.test(\"Verify Delete Booking - Status code name is Not Found\", function () {",
							"    pm.response.to.have.status(\"Not Found\");",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "default"
					},
					{
						"key": "Authorization",
						"value": "Basic YWRtaW46cGFzc3dvcmQxMjM=",
						"type": "default",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/booking/{{bookingId}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"booking",
						"{{bookingId}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}